Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require("react");var _reactNative=require("react-native");function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var LogDimensionChanges=function(_Component){_inherits(LogDimensionChanges,_Component);function LogDimensionChanges(){var _ref;var _temp,_this,_ret;_classCallCheck(this,LogDimensionChanges);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=LogDimensionChanges.__proto__||Object.getPrototypeOf(LogDimensionChanges)).call.apply(_ref,[this].concat(args))),_this),_this.state=_reactNative.Dimensions.get("window"),_this.handler=function(dims){return _this.setState(dims);},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(LogDimensionChanges,[{key:"componentWillMount",value:function componentWillMount(){_reactNative.Dimensions.addEventListener("change",this.handler);}},{key:"componentWillUnmount",value:function componentWillUnmount(){_reactNative.Dimensions.removeEventListener("change",this.handler);}},{key:"render",value:function render(){var _state$window=this.state.window,width=_state$window.width,height=_state$window.height;var mode=height>width?"portrait":"landscape";console.log("New dimensions "+width+"x"+height+" ("+mode+")");return null;}}]);return LogDimensionChanges;}(_react.Component);exports.default=LogDimensionChanges;